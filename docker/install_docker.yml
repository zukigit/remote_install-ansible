# add docker on redhat-based servers
- name: Add stream repo
  import_playbook: ../centos/install_stream_repo.yml

- name: Install docker on redhats
  hosts: redhat_servers
  become: true
  tasks:
    - name: Add Docker repo
      ansible.builtin.yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/rhel/$releasever/$basearch/stable
        enabled: yes
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/rhel/gpg
        file: docker-ce
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version in ["9", "8", "7"]

    - name: Install docker
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: ansible_os_family == "RedHat"

# add docker on debian-based servers
- name: Install Docker on Debian
  hosts: debian_servers
  become: yes
  vars:
    distro_name: "{{ ansible_distribution | lower }}"
  tasks:
    - name: Uninstall all conflicting packages
      shell: for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

    - name: Install necessary dependencies
      apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: yes

    - name: Create keyring directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/{{ distro_name }}/gpg -o /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.asc

    - name: Set proper permissions for Docker key
      file:
        path: /etc/apt/keyrings/docker.asc
        mode: "0444"

    - name: Add Docker repository to sources list
      shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ distro_name }} $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: APT cache update
      apt:
        update_cache: true

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is started and enabled
      service:
        name: docker
        state: started
        enabled: true

#add docker on amazon linux 2 and 2023
- name: Install docker on Amazon Linux 2 and 2023
  hosts: amazon_linux_servers
  become: true
  tasks:
    - name: Install Docker
      ansible.builtin.yum:
        name: docker
        state: present
      when: 
        - ansible_distribution == "Amazon"
        - ansible_distribution_major_version in ["2", "2023"]

    - name: Start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true
      when: 
        - ansible_distribution == "Amazon"
        - ansible_distribution_major_version in ["2", "2023"]

    - name: Install Docker Compose
      ansible.builtin.shell: >
        curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

    - name: Make Docker Compose executable
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        mode: '0755'